name: Test + Staging

on:
  push:
    branches:
      - develop

jobs:
  test:
    runs-on: [self-hosted, server2]
    environment: staging
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}
          
      - name: Сборка бекенда
        run: |
          docker build -f ./backend/Dockerfile -t backend-image .
          
      - name: Тест бекенда
        run: |
          docker run --rm \
          backend-image \
          pytest app/api/main.py -s -v
  
  deploy:
    runs-on: [self-hosted, server2]
    environment: staging
    steps:
      - name: Create .env file for staging
        run: |
          cat <<EOF > .env
          APP_ENV=${{ secrets.APP_ENV }}
          APP_MODE=${{ secrets.APP_MODE }}
          POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}
          POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}
          BACKEND_HOST=${{ secrets.BACKEND_HOST }}
          BACKEND_PORT=${{ secrets.BACKEND_PORT }}
          FRONTEND_HOST=${{ secrets.FRONTEND_HOST }}
          FRONTEND_PORT=${{ secrets.FRONTEND_PORT }}
          POSTGRES_USER=${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB=${{ secrets.POSTGRES_DB }}
          NEXT_PUBLIC_API_HOST=${{ secrets.NEXT_PUBLIC_API_HOST }}
          NEXT_PUBLIC_API_PORT=${{ secrets.NEXT_PUBLIC_API_PORT }}
          EOF

      - name: Run Docker Compose
        run: |
          COMPOSE_PROJECT_NAME=${{ github.ref_name }} docker compose up --build -d
